(conf.mat = table(banknotes.glm.preds,test$conterfeit))
(error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.80*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
#Creating a Confusion Matrix
(banknotes.glm.probs = predict(banknotes.glm,type = "response",newdata = test))
(banknotes.glm.preds = ifelse(banknotes.glm.probs < 0.5, "No","Yes"))
(conf.mat = table(banknotes.glm.preds,test$conterfeit))
#Creating a Confusion Matrix
banknotes.glm.probs = predict(banknotes.glm,type = "response",newdata = test)
banknotes.glm.preds = ifelse(banknotes.glm.probs < 0.5, "No","Yes")
(conf.mat = table(banknotes.glm.preds,test$conterfeit))
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
#Creating a Confusion Matrix
banknotes.glm.probs = predict(banknotes.glm,type = "response",newdata = test)
banknotes.glm.preds = ifelse(banknotes.glm.probs < 0.5, "No","Yes")
(conf.mat = table(banknotes.glm.preds,test$conterfeit))
#Creating a Confusion Matrix
banknotes.glm.prob = predict(banknotes.glm,type = "response",newdata = test)
banknotes.glm.pred = ifelse(banknotes.glm.probs < 0.5, "No","Yes")
(conf.mat = table(banknotes.glm.preds,test$conterfeit))
banknotes <- read.csv("~/GitHub/Counterfit-banknote-detection/banknotes.csv")
View(banknotes)
setwd("C:/Users/Audrey Tedore/OneDrive - University Of Houston/")
banknotes<-read.csv("C:/Users/Audrey Tedore/OneDrive - University Of Houston/banknotes.csv")
data=colMeans(banknotes)
colMeans=matrix(data[2:7], nrow=6, ncol=1)
rownames(colMeans)=c("Length","Left","Right","Bottom","Top","Diagonal")
(colMeans)
(cov.matrix=cov(banknotes[,-1]))
(total.variance=sum(diag(cov.matrix)))
banknotesPCA=prcomp(banknotes[,-1],scale.=TRUE)
summary(banknotesPCA)
screeplot(banknotesPCA,type="lines")
library(FactoMineR)
banknotesPCA2=PCA(banknotes[,-1],scale.unit=TRUE,graph=TRUE)
banknotesPCA2$var$cor
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.80*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
#Creating a Confusion Matrix
banknotes.glm.prob = predict(banknotes.glm,type = "response",newdata = test)
banknotes.glm.pred = ifelse(banknotes.glm.probs < 0.5, "No","Yes")
#Creating a Confusion Matrix
banknotes.glm.prob = predict(banknotes.glm,type = "response",newdata = test)
banknotes.glm.pred = ifelse(banknotes.glm.prob < 0.5, "No","Yes")
(conf.mat = table(banknotes.glm.pred,test$conterfeit))
banknotes.glm.probs=predict(banknotes.glm,type="response",newdata=test)
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.75*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
#Creating a Confusion Matrix
banknotes.glm.prob = predict(banknotes.glm,type = "response",newdata = test)
banknotes.glm.pred = ifelse(banknotes.glm.prob < 0.5, "No","Yes")
(conf.mat = table(banknotes.glm.pred,test$conterfeit))
#Creating a Confusion Matrix
banknotes.glm.probabilities = predict(banknotes.glm,type = "response",newdata = test)
banknotes.glm.predictions = ifelse(banknotes.glm.prob < 0.5, "No","Yes")
(conf.mat = table(banknotes.glm.pred,test$conterfeit))
#Creating a Confusion Matrix
banknotes.glm.probs = predict(banknotes.glm,type="response",newdata = test)
banknotes.glm.preds = ifelse(banknotes.glm.probs < 0.5, "No","Yes")
(conf.mat = table(banknotes.glm.preds,test$conterfeit))
data=colMeans(banknotes)
colMeans=matrix(data[2:7], nrow=6, ncol=1)
rownames(colMeans)=c("Length","Left","Right","Bottom","Top","Diagonal")
(colMeans)
banknotesPCA=prcomp(banknotes[,-1],scale.=TRUE)
summary(banknotesPCA)
screeplot(banknotesPCA,type="lines")
library(FactoMineR)
banknotesPCA2=PCA(banknotes[,-1],scale.unit=TRUE,graph=TRUE)
banknotesPCA2$var$cor
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.75*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
#Creating a Confusion Matrix
banknotes.glm.probs = predict(banknotes.glm,type="response",newdata = test)
banknotes.glm.preds = ifelse(banknotes.glm.probs < 0.5, "No","Yes")
(conf.mat = table(banknotes.glm.preds,test$conterfeit))
banknotes <- read.csv("~/GitHub/Counterfit-banknote-detection/banknotes.csv")
View(banknotes)
data=colMeans(banknotes)
colMeans=matrix(data[2:7], nrow=6, ncol=1)
rownames(colMeans)=c("Length","Left","Right","Bottom","Top","Diagonal")
(colMeans)
banknotesPCA=prcomp(banknotes[,-1],scale.=TRUE)
summary(banknotesPCA)
screeplot(banknotesPCA,type="lines")
library(FactoMineR)
banknotesPCA2=PCA(banknotes[,-1],scale.unit=TRUE,graph=TRUE)
banknotesPCA2$var$cor
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.75*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
#Creating a Confusion Matrix
banknotes.glm.probs = predict(banknotes.glm,type="response",newdata = test)
banknotes.glm.preds = ifelse(banknotes.glm.probs < 0.5, "No","Yes")
(conf.mat = table(banknotes.glm.preds,test$conterfeit))
#Creating a Confusion Matrix
banknotes.glm.probs = predict(banknotes.glm,type="response",newdata = test)
banknotes.glm.preds = ifelse(banknotes.glm.probs < 0.5, "No","Yes")
(conf.mat = table(banknotes.glm.preds,test$conterfeit))
#Creating a Confusion Matrix
banknotes.glm.probs = predict(banknotes.glm,type="response",newdata = test)
banknotes.glm.preds = ifelse(banknotes.glm.probs < 0.5, "No","Yes")
(conf.mat = table(banknotes.glm.preds,test$conterfeit))
banknotes.glm.probs=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,test$conterfeit))
(banknotes.glm.probs=predict(banknotes.glm,type="response",newdata=test))
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,test$conterfeit))
View(test)
View(train)
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.75*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,test$conterfeit))
View(pca)
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(train$conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,test$conterfeit))
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,test$conterfeit))
View(test)
pca<-banknotesPCA2$ind$coord[NA,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
banknotes.glm = glm(conterfeit ~ banknotesPCA2$ind$coord[nrows(data),1:3], family = "binomial", data = train)
banknotes.glm = glm(conterfeit ~ banknotesPCA2$ind$coord[dim(data)[1,1],1:3], family = "binomial", data = train)
banknotes.glm = glm(conterfeit ~ banknotesPCA2$ind$coord[nrow(data),1:3], family = "binomial", data = train)
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.75*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
banknotes.glm = glm(conterfeit ~ banknotesPCA2$ind$coord[,1:3], family = "binomial", data = train)
banknotes.glm = glm(conterfeit ~ banknotesPCA2$ind$coord[train,1:3], family = "binomial", data = train)
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,test$conterfeit))
(error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
(banknotes.glm.probs=predict(banknotes.glm,type="response",newdata=test))
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,test$conterfeit))
(error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
summary(banknotes.glm
(banknotes.glm.probs=predict(banknotes.glm,type="response",newdata=test))
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
pca<-banknotesPCA2$ind$coord[-sample,1:3]
summary(banknotes.glm
banknotes.glm.probs=predict(banknotes.glm,type="response",newdata=test)
pca<-banknotesPCA2$ind$coord[-sample,1:3]
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,test$conterfeit))
(error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
View(pca)
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,test$conterfeit))
(error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.80*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.85*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.80*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.78*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.77*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.78*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.80*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.85*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.90*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.80*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.75*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.80*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.85*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.80*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
knitr::opts_chunk$set(echo = TRUE)
hist(banknotes$Length)
banknotes <- read.csv("~/GitHub/Counterfit-banknote-detection/banknotes.csv")
View(banknotes)
hist(banknotes$Length)
hist(banknotes$Left)
hist(banknotes$Right)
hist(banknotes$Bottom)
hist(banknotes$Top)
hist(banknotes$Diagonal)
banknotes <- read.csv("~/GitHub/Counterfit-banknote-detection/banknotes.csv")
View(banknotes)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Audrey Tedore/OneDrive - University Of Houston/")
banknotes<-read.csv("C:/Users/Audrey Tedore/OneDrive - University Of Houston/banknotes.csv")
data=colMeans(banknotes)
colMeans=matrix(data[2:7], nrow=6, ncol=1)
rownames(colMeans)=c("Length","Left","Right","Bottom","Top","Diagonal")
(colMeans)
(cov.matrix=cov(banknotes[,-1]))
(total.variance=sum(diag(cov.matrix)))
hist(banknotes$Length)
hist(banknotes$Left)
hist(banknotes$Right)
hist(banknotes$Bottom)
hist(banknotes$Top)
hist(banknotes$Diagonal)
banknotesPCA=prcomp(banknotes[,-1],scale.=TRUE)
summary(banknotesPCA)
screeplot(banknotesPCA,type="lines")
library(FactoMineR)
banknotesPCA2=PCA(banknotes[,-1],scale.unit=TRUE,graph=TRUE)
banknotesPCA2$var$cor
set.seed(101)
sample = sample.int(n = nrow(banknotes),size = round(.80*nrow(banknotes)),
replace = FALSE)
train = banknotes[sample,]
test = banknotes[-sample,]
pca<-banknotesPCA2$ind$coord[sample,1:3]
banknotes.glm = glm(conterfeit ~ pca, family = "binomial", data = train)
summary(banknotes.glm)
banknotes.glm.probs=predict(banknotes.glm,type="response")
banknotes.glm.preds=ifelse(banknotes.glm.probs<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds,train$conterfeit))
(train_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
pca<-banknotesPCA2$ind$coord[-sample,1:3]
banknotes.glm.probs.1=predict(banknotes.glm,type="response",newdata=test)
banknotes.glm.preds.1=ifelse(banknotes.glm.probs.1<0.5,"No","Yes")
(conf.mat=table(banknotes.glm.preds.1,test$conterfeit))
(test_error_rate=(conf.mat[1,2]+conf.mat[2,1])/sum(conf.mat))
step(banknotes.glm)
